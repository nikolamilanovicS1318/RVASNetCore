<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rooms</title>
</head>
<body>
 


    @* U foreach petlji prolazimo kroz listu svih soba (koju smo izvukli u kontroleru UserController) i za svaku sobu iz
        MongoDB kolekcije ispisujemo podatke*@

    @foreach (var x in (List<Room>)ViewData["ListOfRooms"])
    {


                <p>Room number: @x.RoomNumber</p>
                <p>Number of beds: @x.NumberOfBeds</p>
                <p>Price: @x.Price</p>
                <p>Floor: @x.Floor</p>
                <p>Is the room occuppied? @x.IsOccupied</p>
                <p>Minifridge included? @x.HasMiniFridge</p>

                @Html.ActionLink("Update", "RoomEdit", routeValues: new { RoomID = x.RoomID })
                @Html.ActionLink("Delete", "DeleteRoom", routeValues: new { RoomID = x.RoomID })
    }

    @*@ViewData["API_Rooms"]*@

    @* Deklarišemo varijablu koja uzima vrednost ViewData["Data"] iz kontrolera; kako bi ovo radilo, ViewData objekat mora da se
        castuje u listu tipa JToken - posle ovoga u foreach petlji prolazimo kroz sve JTokene i printujemo odgovarajuće
        vrednosti *@
    @{ 
        var JTList = (List<Newtonsoft.Json.Linq.JToken>)ViewData["Data"];
        foreach (Newtonsoft.Json.Linq.JToken j in JTList)

        {
                        <div>
                            Room ID: @j.SelectToken("@id")
                            Room type: @j.SelectToken("@type")
                        </div> 
        } 
    }

    @* Proveravamo da li je TempData iz kontrolera prazan; ako nije, znamo da je došlo do neke greške; koristimo
        JavaScript da prikažemo grešku koju smo spremili u kontroleru*@

    @if (TempData["alertMessage"] != null)
    {
                <script type="text/javascript">
                    alert('@TempData["alertMessage"]');
                    </script>
    }

<<<<<<< HEAD



=======
    @*@ViewData["API_Rooms"]*@
    @{ 

        var JTList = (List<Newtonsoft.Json.Linq.JToken>)ViewData["Data"];
        foreach(Newtonsoft.Json.Linq.JToken j in JTList)

        { 
               <div>
                  Room ID: @j.SelectToken("@id")
                  Room type: @j.SelectToken("@type")
               </div>
            }
    }
 
>>>>>>> 7fcb772d788a216c7f2b1baca9707050bfa9f64f


</body>
</html>