@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Http
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-controller="User" asp-action="Register">Register</a>
        </li>
        @if (@HttpContextAccessor.HttpContext.Session.GetString("Session") == null)
        { 
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-controller="User" asp-action="LoginPage">Login</a>
            </li>
        }

        @if (@HttpContextAccessor.HttpContext.Session.GetString("Session") != null)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-controller="User" asp-action="LogoutUser">Log out</a>
            </li>
        }
        @if (@HttpContextAccessor.HttpContext.Session.GetString("Session") != null)
        {
            <li class="nav-item">
                <button type="button" class="btn btn-success mr-3"> @Html.ActionLink("User Profile", "UserProfile", "User", routeValues: new { UserID = HttpContextAccessor.HttpContext.Session.GetString("Session") })</button>
            </li>
        }

    }
</ul>
